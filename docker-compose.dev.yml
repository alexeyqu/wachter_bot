version: "3.9"

services:
  wachter-db:
    container_name: wachter-db-dev
    image: postgres:alpine
    restart: always
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB:       db
      POSTGRES_HOST:     wachter-db
      POSTGRES_USER:     user
      POSTGRES_PASSWORD: password
    volumes:
      - volume-db:/data/db
      - postgres-data:/var/lib/postgresql/data
      - ./share/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: pg_isready -U user -d db
      interval: 5s
      timeout: 2s
      retries: 3

  wachter-persistence-db:
    container_name: wachter-persistence-db-dev
    image: postgres:alpine
    restart: always
    ports:
      - 5434:5432
    environment:
      POSTGRES_DB:       db
      POSTGRES_HOST:     wachter-persistence-db
      POSTGRES_USER:     user
      POSTGRES_PASSWORD: password
    volumes:
      - volume-persistence-db:/data/db
      - postgres-persistence-data:/var/lib/postgresql/data
      - ./share/sql-persistence:/docker-entrypoint-initdb.d
    healthcheck:
      test: pg_isready -U user -d db
      interval: 5s
      timeout: 2s
      retries: 3

  wachter:
    container_name: wachter-dev
    build:
      context: .
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_ERROR_CHAT_ID=${TELEGRAM_ERROR_CHAT_ID}
      - DATABASE_URL=postgresql+asyncpg://user:password@wachter-db/db
      - PERSISTENCE_DATABASE_URL=postgresql://user:password@wachter-persistence-db/db
    restart: unless-stopped
    depends_on:
      wachter-db:
        condition: service_healthy

volumes:
  volume-db:
  postgres-data:
  volume-persistence-db:
  postgres-persistence-data:

networks:
  default:
    name: network-wachter-dev
